<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on LoÃ¯c M. Divad</title>
    <link>https://blog.loicmdivad.com/posts/</link>
    <description>Recent content in Posts on LoÃ¯c M. Divad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Dec 2021 09:00:00 +0200</lastBuildDate><atom:link href="https://blog.loicmdivad.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Explore data contracts with Cloud Pub/Sub</title>
      <link>https://blog.loicmdivad.com/posts/2021/12/explore-data-contracts-with-cloud-pubsub/</link>
      <pubDate>Sun, 05 Dec 2021 09:00:00 +0200</pubDate>
      
      <guid>https://blog.loicmdivad.com/posts/2021/12/explore-data-contracts-with-cloud-pubsub/</guid>
      <description>This article aims to discuss data contracts in the context of event processing applications. We will follow a short example: The Dumpling App! The post also looks at that concept through specific technologies. Pub/Sub message schemas is a relatively recent feature, so let&amp;rsquo;s take it for a spin in that article.</description>
    </item>
    
    <item>
      <title>Repost ðŸ”ƒ Kafka Streams, co-partitioning requirements illustrated</title>
      <link>https://blog.loicmdivad.com/posts/2020/06/repost-kafka-streams-co-partitioning-requirements-illustrated/</link>
      <pubDate>Sat, 20 Jun 2020 09:00:00 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/posts/2020/06/repost-kafka-streams-co-partitioning-requirements-illustrated/</guid>
      <description>Back in 2020, I wrote an article about data exchange between Kafka Streams instances. I was not working with Kafka Stream at a specific time. But my head was full of many ideas I wanted to put on paper after using the Kafka Streams library for quite a while. The way joins happen was one of those ideas.</description>
    </item>
    
    <item>
      <title>Use Confluent Cloud secrets in GKE</title>
      <link>https://blog.loicmdivad.com/posts/2020/04/use-confluent-cloud-secrets-in-gke/</link>
      <pubDate>Thu, 09 Apr 2020 09:00:00 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/posts/2020/04/use-confluent-cloud-secrets-in-gke/</guid>
      <description>On your journey to build event stream and real-time applications you have probably heard about Confluent Cloud:
 [&amp;hellip;] a fully managed, cloud-native event streaming platform powered by Apache Kafka.
 The team behind this service is putting a lot of efforts to provide a smooth and complete experience in working with Apache Kafka in the cloud.</description>
    </item>
    
    <item>
      <title>Kafka topic creation with Scala and Gradle</title>
      <link>https://blog.loicmdivad.com/posts/2020/03/kafka-topic-creation-with-scala-and-gradle/</link>
      <pubDate>Sun, 15 Mar 2020 09:00:00 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/posts/2020/03/kafka-topic-creation-with-scala-and-gradle/</guid>
      <description>If you develop a piece of software dealing with data systems, you are probably facing a few prerequisites. For example, you may need a file system to be mounted or a database table to be created. The same applies to event stream applications using Apache KafkaÂ® as an event log. They need topics, schemas and ACLs to be created first, in order to run correctly.</description>
    </item>
    
    <item>
      <title>Repost ðŸ”ƒ Kafka Streams: a road to Autoscaling via Kubernetes</title>
      <link>https://blog.loicmdivad.com/posts/2019/04/repost-kafka-streams-a-road-to-autoscaling-via-kubernetes/</link>
      <pubDate>Mon, 15 Apr 2019 18:00:02 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/posts/2019/04/repost-kafka-streams-a-road-to-autoscaling-via-kubernetes/</guid>
      <description>There are many reasons for working on community contributions such as a blog post, a demo, or a talk. Sometimes, you produce those contributions to share something that you&amp;rsquo;ve learned at work. But sometimes, the contribution itself can be a way to learn and experiment something new. I was in the second case when I worked on the article Kafka Streams: a road to Autoscaling via Kubernetes.</description>
    </item>
    
    <item>
      <title>Repost ðŸ”ƒ Apache Kudu: the New Bigdata Antelope</title>
      <link>https://blog.loicmdivad.com/posts/2017/04/repost-apache-kudu-the-new-bigdata-antelope/</link>
      <pubDate>Mon, 10 Apr 2017 09:00:00 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/posts/2017/04/repost-apache-kudu-the-new-bigdata-antelope/</guid>
      <description>Software Engineers frequently engage themself into new learning paths. We keep learning skills related to our field such as programming languages; libraries or even how new data systems work. This idea is one of the 4 company values of @PubSapientEng, and they named it: Sharing Knowledge. Why &amp;ldquo;sharing&amp;rdquo;? Besides the idea to keep up with tech, it&amp;rsquo;s a good way to extends your skills and get new perspectives on the job you do every day.</description>
    </item>
    
    <item>
      <title>Hello, World</title>
      <link>https://blog.loicmdivad.com/posts/1970/01/hello-world/</link>
      <pubDate>Thu, 01 Jan 1970 18:00:00 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/posts/1970/01/hello-world/</guid>
      <description>Hello, again&amp;hellip; I&amp;rsquo;ve decided to relaunch this site. People always insist on the importance of having a kind of portfolio, blog or website. It is true, especially for developers. So here is mine! Itâ€™s not totally new. Iâ€™ve revamped my previous attempt to create a personal page by migrating to Hugo.</description>
    </item>
    
  </channel>
</rss>
