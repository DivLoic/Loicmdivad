<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kafka on Loïc M. Divad</title>
    <link>https://blog.loicmdivad.com/tags/kafka/</link>
    <description>Recent content in kafka on Loïc M. Divad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Nov 2019 09:00:01 +0100</lastBuildDate><atom:link href="https://blog.loicmdivad.com/tags/kafka/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Event Driven Machine Learning (Xebicon&#39;19)</title>
      <link>https://blog.loicmdivad.com/talks/event-driven-machine-learning-xebicon19/</link>
      <pubDate>Thu, 28 Nov 2019 09:00:01 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/talks/event-driven-machine-learning-xebicon19/</guid>
      <description>The abstract (in French 🧀🍷🇫🇷):
 Le serving de modèle de Machine Learning pour la prédiction en temps réel présente des défis tant en Data Engineering qu&amp;rsquo;en Data Science. Comment construire un pipeline moderne qui permet de réaliser des prédictions en continu ? Dans le cas d’un exercice supervisé, comment allier tracing et tracking des performances ?</description>
    </item>
    
    <item>
      <title>Kafka Streams Poison Pills (Kafka Summit SF&#39;19)</title>
      <link>https://blog.loicmdivad.com/talks/kafka-streams-poison-pills-kafka-summit-sf19/</link>
      <pubDate>Tue, 01 Oct 2019 09:00:00 -0800</pubDate>
      
      <guid>https://blog.loicmdivad.com/talks/kafka-streams-poison-pills-kafka-summit-sf19/</guid>
      <description>The abstract:
 Apache Kafka&amp;rsquo;s Streams API lets us process messages from different topics with very low latency. Messages may have different formats, schemas and may even be serialised in different ways. What happens when an undesirable message comes in the flow? When an error occurs, real-time applications can&amp;rsquo;t always wait for manual recovery and need to handle such failures.</description>
    </item>
    
    <item>
      <title>Kafka Streams On k8s: The Difficulties</title>
      <link>https://blog.loicmdivad.com/talks/kafka-streams-on-k8s-the-difficulties/</link>
      <pubDate>Tue, 04 Jun 2019 09:00:00 +0200</pubDate>
      
      <guid>https://blog.loicmdivad.com/talks/kafka-streams-on-k8s-the-difficulties/</guid>
      <description>The abstract (in French 🧀🍷🇫🇷):
 L’ Auto Scaling c’est l’argument phare d’un bon nombre de technologies en Data Engineering. Parmi les outils du moment, on retrouve Kafka-Streams. Avec sa forte intégration au bus de message Apache Kafka, il est pensé pour être un framework distribué capable de passer à l’échelle.</description>
    </item>
    
    <item>
      <title>Kafka Streams Poison Pills (DEVOXX France&#39;19)</title>
      <link>https://blog.loicmdivad.com/talks/kafka-streams-poison-pills-devoxx-france19/</link>
      <pubDate>Thu, 18 Apr 2019 09:00:00 +0200</pubDate>
      
      <guid>https://blog.loicmdivad.com/talks/kafka-streams-poison-pills-devoxx-france19/</guid>
      <description>The abstract (in French 🧀🍷🇫🇷):
 Kafka-Streams, la librairie de traitement de données en temps réel de Apache Kafka permet de traiter une grande quantité de messages avec de très faibles latences. Les messages peuvent avoir des formats différents, des schémas différents et même être sérialisés de manières différentes. Alors que se passe-t-il quand un message indésirable se retrouve dans un flux ?</description>
    </item>
    
    <item>
      <title>Repost 🔃 Kafka Streams: a road to Autoscaling via Kubernetes</title>
      <link>https://blog.loicmdivad.com/posts/2019/04/repost-kafka-streams-a-road-to-autoscaling-via-kubernetes/</link>
      <pubDate>Mon, 15 Apr 2019 18:00:02 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/posts/2019/04/repost-kafka-streams-a-road-to-autoscaling-via-kubernetes/</guid>
      <description>There are many reasons for working on community contributions such as a blog post, a demo, or a talk. Sometimes, you produce those contributions to share something that you&amp;rsquo;ve learned at work. But sometimes, the contribution itself can be a way to learn and experiment something new. I was in the second case when I worked on the article Kafka Streams: a road to Autoscaling via Kubernetes.</description>
    </item>
    
    <item>
      <title>Scale in / Scale out with Kafka Streams and Kubernetes</title>
      <link>https://blog.loicmdivad.com/talks/scale-in-/-scale-out-with-kafka-streams-and-kubernetes/</link>
      <pubDate>Tue, 20 Nov 2018 09:00:00 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/talks/scale-in-/-scale-out-with-kafka-streams-and-kubernetes/</guid>
      <description>The abstract:
 Apache Kafka’s Streams API lets us process messages from different topics with very low latency. Messages may have different formats, schemas and may even be serialised in different ways. What happens when an undesirable message comes in the flow? When an error occurs, real-time applications can’t always wait for manual recovery and need to handle such failures.</description>
    </item>
    
    <item>
      <title>Processor API: the dark side of Kafka Streams</title>
      <link>https://blog.loicmdivad.com/talks/processor-api-the-dark-side-of-kafka-streams/</link>
      <pubDate>Mon, 12 Mar 2018 09:00:00 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/talks/processor-api-the-dark-side-of-kafka-streams/</guid>
      <description>The abstract (in French 🧀🍷🇫🇷):
 Complexe et fastidieuse, la Processor API est souvent mise de côté. C’est dommage, surtout quand on apprend que les plus grandes fonctionnalités de Kafka Streams s’y cachent. Notamment les stateful operations et interactives queries. Malgré cela c’est Stream DSL, l’API haut niveau, qui a su séduire les développeurs.</description>
    </item>
    
  </channel>
</rss>
