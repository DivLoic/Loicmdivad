<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>k8s on Loïc M. Divad</title><link>https://blog.loicmdivad.com/tags/k8s/</link><description>Recent content in k8s on Loïc M. Divad</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 04 Jun 2019 09:00:00 +0200</lastBuildDate><atom:link href="https://blog.loicmdivad.com/tags/k8s/index.xml" rel="self" type="application/rss+xml"/><item><title>Kafka Streams On k8s: The Difficulties</title><link>https://blog.loicmdivad.com/talks/kafka-streams-on-k8s-the-difficulties/</link><pubDate>Tue, 04 Jun 2019 09:00:00 +0200</pubDate><guid>https://blog.loicmdivad.com/talks/kafka-streams-on-k8s-the-difficulties/</guid><description>The abstract (in French 🧀🍷🇫🇷):
L’ Auto Scaling c’est l’argument phare d’un bon nombre de technologies en Data Engineering. Parmi les outils du moment, on retrouve Kafka-Streams. Avec sa forte intégration au bus de message Apache Kafka, il est pensé pour être un framework distribué capable de passer à l’échelle.</description></item><item><title>Scale in / Scale out with Kafka Streams and Kubernetes</title><link>https://blog.loicmdivad.com/talks/scale-in-/-scale-out-with-kafka-streams-and-kubernetes/</link><pubDate>Tue, 20 Nov 2018 09:00:00 +0100</pubDate><guid>https://blog.loicmdivad.com/talks/scale-in-/-scale-out-with-kafka-streams-and-kubernetes/</guid><description>The abstract:
Apache Kafka’s Streams API lets us process messages from different topics with very low latency. Messages may have different formats, schemas and may even be serialised in different ways. What happens when an undesirable message comes in the flow? When an error occurs, real-time applications can’t always wait for manual recovery and need to handle such failures.</description></item></channel></rss>