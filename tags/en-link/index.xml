<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>en-link on LoÃ¯c M. Divad</title>
    <link>https://blog.loicmdivad.com/tags/en-link/</link>
    <description>Recent content in en-link on LoÃ¯c M. Divad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jun 2020 09:00:00 +0100</lastBuildDate><atom:link href="https://blog.loicmdivad.com/tags/en-link/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Repost ðŸ”ƒ Kafka Streams, co-partitioning requirements illustrated</title>
      <link>https://blog.loicmdivad.com/posts/2020/06/repost-kafka-streams-co-partitioning-requirements-illustrated/</link>
      <pubDate>Sat, 20 Jun 2020 09:00:00 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/posts/2020/06/repost-kafka-streams-co-partitioning-requirements-illustrated/</guid>
      <description>Back in 2020, I wrote an article about data exchange between Kafka Streams instances. I was not working with Kafka Stream at a specific time. But my head was full of many ideas I wanted to put on paper after using the Kafka Streams library for quite a while. The way joins happen was one of those ideas.</description>
    </item>
    
    <item>
      <title>Kafka Streams Poison Pills (Kafka Summit SF&#39;19)</title>
      <link>https://blog.loicmdivad.com/talks/kafka-streams-poison-pills-kafka-summit-sf19/</link>
      <pubDate>Tue, 01 Oct 2019 09:00:00 -0800</pubDate>
      
      <guid>https://blog.loicmdivad.com/talks/kafka-streams-poison-pills-kafka-summit-sf19/</guid>
      <description>The abstract:
 Apache Kafka&amp;rsquo;s Streams API lets us process messages from different topics with very low latency. Messages may have different formats, schemas and may even be serialised in different ways. What happens when an undesirable message comes in the flow? When an error occurs, real-time applications can&amp;rsquo;t always wait for manual recovery and need to handle such failures.</description>
    </item>
    
    <item>
      <title>Repost ðŸ”ƒ Kafka Streams: a road to Autoscaling via Kubernetes</title>
      <link>https://blog.loicmdivad.com/posts/2019/04/repost-kafka-streams-a-road-to-autoscaling-via-kubernetes/</link>
      <pubDate>Mon, 15 Apr 2019 18:00:02 +0100</pubDate>
      
      <guid>https://blog.loicmdivad.com/posts/2019/04/repost-kafka-streams-a-road-to-autoscaling-via-kubernetes/</guid>
      <description>There are many reasons for working on community contributions such as a blog post, a demo, or a talk. Sometimes, you produce those contributions to share something that you&amp;rsquo;ve learned at work. But sometimes, the contribution itself can be a way to learn and experiment something new. I was in the second case when I worked on the article Kafka Streams: a road to Autoscaling via Kubernetes.</description>
    </item>
    
  </channel>
</rss>
