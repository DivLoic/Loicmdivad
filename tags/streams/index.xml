<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Streams on LoÃ¯c M. Divad</title><link>https://blog.loicmdivad.com/tags/streams/</link><description>Recent content in Streams on LoÃ¯c M. Divad</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 05 Dec 2021 09:00:00 +0200</lastBuildDate><atom:link href="https://blog.loicmdivad.com/tags/streams/index.xml" rel="self" type="application/rss+xml"/><item><title>Explore data contracts with Cloud Pub/Sub</title><link>https://blog.loicmdivad.com/posts/2021/12/explore-data-contracts-with-cloud-pubsub/</link><pubDate>Sun, 05 Dec 2021 09:00:00 +0200</pubDate><guid>https://blog.loicmdivad.com/posts/2021/12/explore-data-contracts-with-cloud-pubsub/</guid><description>This article aims to discuss data contracts in the context of event processing applications. We will follow a short example: The Dumpling App! The post also looks at that concept through specific technologies. Pub/Sub message schemas is a relatively recent feature, so let&amp;rsquo;s take it for a spin in that article.</description></item><item><title>Repost ðŸ”ƒ Kafka Streams, co-partitioning requirements illustrated</title><link>https://blog.loicmdivad.com/posts/2020/06/repost-kafka-streams-co-partitioning-requirements-illustrated/</link><pubDate>Sat, 20 Jun 2020 09:00:00 +0100</pubDate><guid>https://blog.loicmdivad.com/posts/2020/06/repost-kafka-streams-co-partitioning-requirements-illustrated/</guid><description>Back in 2020, I wrote an article about data exchange between Kafka Streams instances. I was not working with Kafka Stream at a specific time. But my head was full of many ideas I wanted to put on paper after using the Kafka Streams library for quite a while. The way joins happen was one of those ideas.</description></item><item><title>EDML: the Confluent Webinar edition</title><link>https://blog.loicmdivad.com/talks/edml-the-confluent-webinar-edition/</link><pubDate>Mon, 01 Jun 2020 09:00:00 +0100</pubDate><guid>https://blog.loicmdivad.com/talks/edml-the-confluent-webinar-edition/</guid><description>The abstract in French ðŸ‡«ðŸ‡·:
Le serving de modÃ¨le de Machine Learning pour la prÃ©diction en temps rÃ©el prÃ©sente des dÃ©fis tant en Data Engineering qu&amp;rsquo;en Data Science. Comment construire un pipeline moderne qui permet de rÃ©aliser des prÃ©dictions en continu ? Dans le cas d&amp;rsquo;un exercice supervisÃ©, comment allier tracing et tracking des performances ?</description></item><item><title>Event Driven Machine Learning (Xebicon'19)</title><link>https://blog.loicmdivad.com/talks/event-driven-machine-learning-xebicon19/</link><pubDate>Thu, 28 Nov 2019 09:00:01 +0100</pubDate><guid>https://blog.loicmdivad.com/talks/event-driven-machine-learning-xebicon19/</guid><description>The abstract (in French ðŸ‡«ðŸ‡·):
Le serving de modÃ¨le de Machine Learning pour la prÃ©diction en temps rÃ©el prÃ©sente des dÃ©fis tant en Data Engineering qu&amp;rsquo;en Data Science. Comment construire un pipeline moderne qui permet de rÃ©aliser des prÃ©dictions en continu ? Dans le cas dâ€™un exercice supervisÃ©, comment allier tracing et tracking des performances ?</description></item><item><title>Kafka Streams Poison Pills (Kafka Summit SF'19)</title><link>https://blog.loicmdivad.com/talks/kafka-streams-poison-pills-kafka-summit-sf19/</link><pubDate>Tue, 01 Oct 2019 09:00:00 -0800</pubDate><guid>https://blog.loicmdivad.com/talks/kafka-streams-poison-pills-kafka-summit-sf19/</guid><description>The abstract:
Apache Kafka&amp;rsquo;s Streams API lets us process messages from different topics with very low latency. Messages may have different formats, schemas and may even be serialised in different ways. What happens when an undesirable message comes in the flow? When an error occurs, real-time applications can&amp;rsquo;t always wait for manual recovery and need to handle such failures.</description></item><item><title>Kafka Streams On k8s: The Difficulties</title><link>https://blog.loicmdivad.com/talks/kafka-streams-on-k8s-the-difficulties/</link><pubDate>Tue, 04 Jun 2019 09:00:00 +0200</pubDate><guid>https://blog.loicmdivad.com/talks/kafka-streams-on-k8s-the-difficulties/</guid><description>The abstract (in French ðŸ‡«ðŸ‡·):
Lâ€™ Auto Scaling câ€™est lâ€™argument phare dâ€™un bon nombre de technologies en Data Engineering. Parmi les outils du moment, on retrouve Kafka-Streams. Avec sa forte intÃ©gration au bus de message Apache Kafka, il est pensÃ© pour Ãªtre un framework distribuÃ© capable de passer Ã  lâ€™Ã©chelle. Pourtant, dans la pratique, sa seule utilisation est limitÃ©e.</description></item><item><title>Kafka Streams Poison Pills (DEVOXX France'19)</title><link>https://blog.loicmdivad.com/talks/kafka-streams-poison-pills-devoxx-france19/</link><pubDate>Thu, 18 Apr 2019 09:00:00 +0200</pubDate><guid>https://blog.loicmdivad.com/talks/kafka-streams-poison-pills-devoxx-france19/</guid><description>The abstract (in French ðŸ‡«ðŸ‡·):
Kafka-Streams, la librairie de traitement de donnÃ©es en temps rÃ©el de Apache Kafka permet de traiter une grande quantitÃ© de messages avec de trÃ¨s faibles latences. Les messages peuvent avoir des formats diffÃ©rents, des schÃ©mas diffÃ©rents et mÃªme Ãªtre sÃ©rialisÃ©s de maniÃ¨res diffÃ©rentes. Alors que se passe-t-il quand un message indÃ©sirable se retrouve dans un flux ?</description></item><item><title>Repost ðŸ”ƒ Kafka Streams: a road to Autoscaling via Kubernetes</title><link>https://blog.loicmdivad.com/posts/2019/04/repost-kafka-streams-a-road-to-autoscaling-via-kubernetes/</link><pubDate>Mon, 15 Apr 2019 18:00:02 +0100</pubDate><guid>https://blog.loicmdivad.com/posts/2019/04/repost-kafka-streams-a-road-to-autoscaling-via-kubernetes/</guid><description>There are many reasons for working on community contributions such as a blog post, a demo, or a talk. Sometimes, you produce those contributions to share something that you&amp;rsquo;ve learned at work. But sometimes, the contribution itself can be a way to learn and experiment something new. I was in the second case when I worked on the article Kafka Streams: a road to Autoscaling via Kubernetes.</description></item><item><title>Scale in / Scale out with Kafka Streams and Kubernetes</title><link>https://blog.loicmdivad.com/talks/scale-in-/-scale-out-with-kafka-streams-and-kubernetes/</link><pubDate>Tue, 20 Nov 2018 09:00:00 +0100</pubDate><guid>https://blog.loicmdivad.com/talks/scale-in-/-scale-out-with-kafka-streams-and-kubernetes/</guid><description>The abstract:
Apache Kafkaâ€™s Streams API lets us process messages from different topics with very low latency. Messages may have different formats, schemas and may even be serialised in different ways. What happens when an undesirable message comes in the flow? When an error occurs, real-time applications canâ€™t always wait for manual recovery and need to handle such failures.</description></item><item><title>Processor API: the dark side of Kafka Streams</title><link>https://blog.loicmdivad.com/talks/processor-api-the-dark-side-of-kafka-streams/</link><pubDate>Mon, 12 Mar 2018 09:00:00 +0100</pubDate><guid>https://blog.loicmdivad.com/talks/processor-api-the-dark-side-of-kafka-streams/</guid><description>The abstract (in French ðŸ‡«ðŸ‡·):
Complexe et fastidieuse, la Processor API est souvent mise de cÃ´tÃ©. Câ€™est dommage, surtout quand on apprend que les plus grandes fonctionnalitÃ©s de Kafka Streams sâ€™y cachent. Notamment les stateful operations et interactives queries. MalgrÃ© cela câ€™est Stream DSL, lâ€™API haut niveau, qui a su sÃ©duire les dÃ©veloppeurs.</description></item></channel></rss>